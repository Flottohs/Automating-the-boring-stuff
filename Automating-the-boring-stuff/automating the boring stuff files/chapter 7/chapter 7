my_cat = {'size':'fat','color':'grey','age':17}
my_cat['size']

#dictionaries dont index there values, but rather keys. like 'size':'fat'
#size would be the key

#unlike in a list, the order doesnt matter because nothing is indexed.
#you can set to dictionaries as equal, and as long as they contain all the same keys and values, they are the same


#when you combine keys and values, they are called items
print(my_cat.items())
print(my_cat.keys())
print(my_cat.values())

#you can check if something is is in a dictionary by typing x in dictionary, and it will return true or false
print('size' in my_cat)
#you can figure out value from just the key using the get function for example
print('my cat is', str(my_cat.get('age',0)),'years old')
#0 is there just incasekey isnt there, so it auto sets it to zero in the output


#setting default values:
#you can set default values for keys that arent in the dictionary by using
if 'dog' not in my_cat:
    my_cat['dog'] = 'purple'
#theres actually a function for this
my_cat.setdefault('weight','100kg')
print(my_cat)


#nested dictionaries and lists
all_guests = {'Alice': {'apples': 5, 'pretzels': 12},
              'Bob': {'ham sandwiches': 3, 'apples': 2},
              'Carol': {'cups': 3, 'apple pies': 1}}

def total_brought(guests, item):
    num_brought = 0
    for k, v in guests.items():
        num_brought = num_brought + v.get(item, 0)
    return num_brought

print('Number of things being brought:')
print(' - Apples         ' + str(total_brought(all_guests, 'apples')))
print(' - Cups           ' + str(total_brought(all_guests, 'cups')))
print(' - Cakes          ' + str(total_brought(all_guests, 'cakes')))
print(' - Ham Sandwiches ' + str(total_brought(all_guests, 'ham sandwiches')))
print(' - Apple Pies     ' + str(total_brought(all_guests, 'apple pies')))